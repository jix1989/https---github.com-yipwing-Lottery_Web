//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace LotteryModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LotteryAPPEntities : DbContext
    {
        public LotteryAPPEntities()
            : base("name=LotteryAPPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccountBusiness> AccountBusiness { get; set; }
        public virtual DbSet<Accounts> Accounts { get; set; }
        public virtual DbSet<BetInfo> BetInfo { get; set; }
        public virtual DbSet<Cities> Cities { get; set; }
        public virtual DbSet<LotteryOffcialSchedule> LotteryOffcialSchedule { get; set; }
        public virtual DbSet<LotteryOpen> LotteryOpen { get; set; }
        public virtual DbSet<LotteryOpenInfo> LotteryOpenInfo { get; set; }
        public virtual DbSet<LotteryPlays> LotteryPlays { get; set; }
        public virtual DbSet<LotteryPrizePool> LotteryPrizePool { get; set; }
        public virtual DbSet<LotteryPrizePoolInfo> LotteryPrizePoolInfo { get; set; }
        public virtual DbSet<Lotterys> Lotterys { get; set; }
        public virtual DbSet<Provinces> Provinces { get; set; }
        public virtual DbSet<vie_NowTime> vie_NowTime { get; set; }
        public virtual DbSet<Pay_Record> Pay_Record { get; set; }
        public virtual DbSet<AccountRecharge> AccountRecharge { get; set; }
        public virtual DbSet<SinglePay_Record> SinglePay_Record { get; set; }
        public virtual DbSet<AccountWithdraw> AccountWithdraw { get; set; }
        public virtual DbSet<AccountRegInfoSet> AccountRegInfoSet { get; set; }
        public virtual DbSet<BankCard> BankCard { get; set; }
    
        public virtual int ChangeAccountMoney(Nullable<int> count)
        {
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeAccountMoney", countParameter);
        }
    }
}
